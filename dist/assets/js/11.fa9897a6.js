(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{250:function(t,e,s){"use strict";s.r(e);var a=s(5),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#在本地忽略已被-git-追踪的文件"}},[t._v("在本地忽略已被 Git 追踪的文件")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"在本地忽略已被-git-追踪的文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在本地忽略已被-git-追踪的文件"}},[t._v("#")]),t._v(" 在本地忽略已被 Git 追踪的文件")]),t._v(" "),s("p",[t._v("通常情况下我们使用 "),s("code",[t._v(".gitignore")]),t._v(" 文件指定需要被 Git 忽略的文件，但是有时会遇到以下场景：")]),t._v(" "),s("ul",[s("li",[t._v("在多人项目开发时，文件已经被版本控制。")]),t._v(" "),s("li",[t._v("想要忽略某个文件的本地变更并且又不希望提交到远程，例如在应用的配置文件或者代码中加入了方便本地调试的代码。")])]),t._v(" "),s("p",[t._v("在这种情况下可以使用以下命令来阻止改文件的变更被 Git 追踪：")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --skip-worktree path/to/file\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("使用此方式忽略后，本地仓库中就可以变得非常 clean。当需要恢复时使用 "),s("code",[t._v("--no-skip-worktree")]),t._v(" 即可。")]),t._v(" "),s("p",[t._v("查看工作树中的文件追踪状态：")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ls-files -v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" ^S\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("code",[t._v("ls-files")]),t._v(" 查看文件 Git 追踪状态。 "),s("code",[t._v("-v")]),t._v(" 表示检查包括被忽略的文件。"),s("code",[t._v("--skip-worktree")]),t._v(" 后的文件状态展示为 "),s("code",[t._v("S")]),t._v("。")]),t._v(" "),s("p",[t._v("reference：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://git-scm.com/docs/git-update-index",target:"_blank",rel:"noopener noreferrer"}},[t._v("git update-index"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://git-scm.com/docs/git-ls-files",target:"_blank",rel:"noopener noreferrer"}},[t._v("git ls-files"),s("OutboundLink")],1)])]),t._v(" "),s("Vssue")],1)}),[],!1,null,null,null);e.default=r.exports}}]);